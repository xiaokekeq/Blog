const t=JSON.parse('{"key":"v-52ca550e","path":"/posts/java/%E6%B3%A8%E8%A7%A3(Annotation)%E5%92%8C%E5%8F%8D%E5%B0%84(Reflection).html","title":"注解(Annotation)和反射(Reflection)","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-03-07T00:00:00.000Z","category":["java"],"tag":["Annotation&Reflection"],"star":true,"description":"注解(Annotation)和反射(Reflection) 注解 所有框架的底层也用到 mybatis，spring 注释（comment）与注解（Annotation） 都是给人看 注解也可以给程序看 注解入门 Annotation时从JDK5.0开始 Annotation的作用： 不是程序本身，可以对对程序作出解释（这一点和注释（comment）没...","head":[["meta",{"property":"og:url","content":"https://github.com/xiaokekeq/Blog/posts/java/%E6%B3%A8%E8%A7%A3(Annotation)%E5%92%8C%E5%8F%8D%E5%B0%84(Reflection).html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"注解(Annotation)和反射(Reflection)"}],["meta",{"property":"og:description","content":"注解(Annotation)和反射(Reflection) 注解 所有框架的底层也用到 mybatis，spring 注释（comment）与注解（Annotation） 都是给人看 注解也可以给程序看 注解入门 Annotation时从JDK5.0开始 Annotation的作用： 不是程序本身，可以对对程序作出解释（这一点和注释（comment）没..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-28T08:51:31.000Z"}],["meta",{"property":"article:author","content":"xiaoke"}],["meta",{"property":"article:tag","content":"Annotation&Reflection"}],["meta",{"property":"article:published_time","content":"2024-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-28T08:51:31.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注解(Annotation)和反射(Reflection)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-28T08:51:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoke\\",\\"url\\":\\"https://github.com/xiaokekeq\\"}]}"]]},"headers":[{"level":2,"title":"注解","slug":"注解","link":"#注解","children":[{"level":3,"title":"注解入门","slug":"注解入门","link":"#注解入门","children":[]},{"level":3,"title":"内置注解","slug":"内置注解","link":"#内置注解","children":[]},{"level":3,"title":"自定义注解，元注解","slug":"自定义注解-元注解","link":"#自定义注解-元注解","children":[]}]},{"level":2,"title":"反射机制","slug":"反射机制","link":"#反射机制","children":[{"level":3,"title":"java反射机制概述","slug":"java反射机制概述","link":"#java反射机制概述","children":[]},{"level":3,"title":"理解Class类并获取Class实例","slug":"理解class类并获取class实例","link":"#理解class类并获取class实例","children":[]},{"level":3,"title":"类的加载与ClassLoader","slug":"类的加载与classloader","link":"#类的加载与classloader","children":[]},{"level":3,"title":"创建运行时类的对象","slug":"创建运行时类的对象","link":"#创建运行时类的对象","children":[]},{"level":3,"title":"反射操作注解","slug":"反射操作注解","link":"#反射操作注解","children":[]}]}],"git":{"createdTime":1740731251000,"updatedTime":1740732691000,"contributors":[{"name":"xiaokekeq","email":"www.1072639798@gmail.com","commits":2}]},"readingTime":{"minutes":17.72,"words":5316},"filePathRelative":"posts/java/注解(Annotation)和反射(Reflection).md","localizedDate":"2024年3月7日","excerpt":"\\n<h2>注解</h2>\\n<p>所有框架的底层也用到</p>\\n<p>mybatis，spring</p>\\n<p>注释（comment）与注解（Annotation）</p>\\n<p>都是给人看</p>\\n<p><strong>注解也可以给程序看</strong></p>\\n<h3>注解入门</h3>\\n<ul>\\n<li>\\n<p>Annotation时从JDK5.0开始</p>\\n</li>\\n<li>\\n<p>Annotation的作用：</p>\\n<ul>\\n<li>不是程序本身，可以对对程序作出解释（这一点和注释（comment）没什么区别）</li>\\n<li>可以被其他程序（比如：编译器等）读取</li>\\n</ul>\\n</li>\\n<li>\\n<p>Annotation的格式：</p>\\n<ul>\\n<li>注解时以’@注解名‘在代码中存在的，还可以添加一些参数值，例如：@Suppress Waenings(value=\\"unchecked\\")</li>\\n</ul>\\n</li>\\n<li>\\n<p>Annotation在那里使用？</p>\\n<ul>\\n<li>可以附加在package，class，method，field等上面，相当于给他们添加了额外的辅助信息，我们可以通过反射机制编程实现对这些元数据的访问</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{t as data};
